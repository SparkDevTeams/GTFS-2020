{"version":3,"sources":["Components/MainPage/styles.js","Components/MainPage/ListCard/styles.js","Components/Commons/Card/Card.js","Components/MainPage/RouteCard/styles.js","Components/MainPage/RouteCard/index.js","Components/MainPage/ListCard/index.js","Services/API.js","Components/Location/styles.js","Components/Location/Location.js","Components/MainPage/Map/index.js","Static/values.js","Components/MainPage/TrainsPanel/styles.js","Components/MainPage/TrainsPanel/TrainsPanel.js","Components/MainPage/TrirailPanel/styles.js","Components/MainPage/TrirailPanel/TrirailPanel.js","Components/MainPage/MainPage.js","App.js","Components/SignupPage/styles.js","Components/Commons/Modal/styles.js","Components/Commons/Modal/Modal.js","Components/SignupPage/SignUp.js","serviceWorker.js","Components/navbar/Menu.js","Components/navbar/CollapseMenu.js","Components/navbar/Navbar.js","Components/Styles/Global.js","Components/UserProfile/styles.js","Components/UserProfile/UserProfile.js","index.js"],"names":["MainContainer","styled","div","MapContainer","ListContainer","PageTitle","p","TextField","input","Title","h1","Container","Card","width","height","minHeight","margin","padding","lg","md","sm","xs","cursor","hover","selfCenter","direction","CardListContainer","RouteCard","props","useState","routes","setRoutes","useEffect","Routes","Object","entries","length","handleRouteClick","item","a","callBack","RouteId","map","route","i","key","onClick","Name1","ListCard","title","as","value","currentToken","onChange","e","setCurrentToken","currentTarget","tokens","token","idx","routeID","passRouteId","axios","require","URL","API","getRoutes","get","response","data","getTokens","getShapeByRoute","routeId","getStopsByRoute","registerUser","username","password","email","post","user","pwd","status","message","getStations","getTrainSchedule","arrival","departure","date","getAllTrirail","getTrirailShape","id","LocationButton","StyledLocationIcon","svg","Location","handleGeoLocationSuccess","positions","coords","latitude","longitude","accuracy","setCurrentLocation","position","handleGeoLocationError","err","console","log","navigator","geolocation","getCurrentPosition","TiLocationArrow","MapComponent","shape","setShape","trirailShape","setTrirailShape","undefined","currentLocation","mapRef","useRef","RoutePath","current","leafletElement","fitBounds","Array","isArray","panTo","center","zoom","ref","TileLayer","attribution","url","Marker","Circle","radius","Polyline","color","LineColor","Popup","Names","stops","mark","CircleMarker","transMethods","Form","form","FormContainer","wrap","TextLabel","label","InputButton","Text","TrainsPanel","stations","setStations","today","moment","format","departureTime","setDepartureTime","setArrival","setDeparture","trainSchedule","setTrainSchedule","handleSearch","preventDefault","arrivalStation","departureStation","departureTimeFormat","subtract","onSubmit","type","station","train","origin","destination","scheduledDeparture","TrirailPanel","trirails","setTrirails","getTrirails","handleTrirailClick","trirail","name","MainPage","setRouteId","setTokens","setPoints","currentTransMethod","setCurrentTransMethod","getDataPerRoute","useCallback","getBusData","apiTokens","values","apiRoutes","points","fetchRoutes","method","App","ModalBackground","show","CardTitle","ModalText","pre","Modal","className","onClose","SignUp","history","useHistory","setShow","modalText","setmodalText","modalTitle","setmodalTitle","useForm","register","handleSubmit","errors","watch","setError","clearError","isSubmitting","formState","showModal","prev","ErrorMessage","error","validate","setTimeout","push","required","pattern","minLength","maxlength","disabled","Boolean","window","location","hostname","match","Burgermenu","Wrapper","handleNavbar","navbarState","CollapseMenu","open","useSpring","CollapseWrapper","style","transform","interpolate","range","output","openValue","NavLinks","to","animated","ul","Navbar","barAnimation","from","linkAnimation","opacity","delay","config","wobbly","NavBar","FlexContainer","BurgerWrapper","Menu","nav","GlobalStyles","createGlobalStyle","PageContainer","ProfileContainer","SideContainer","ProfileImage","img","Row","hr","Column","About","textarea","ProfileDescription","UserProfile","avatar","class","placeholder","src","ReactDOM","render","navbarOpen","setNavbarOpen","basename","prevState","Global","paddingTop","path","component","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5dd798db.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nexport const MapContainer = styled.div`\r\n  width: 75%;\r\n`;\r\n\r\nexport const ListContainer = styled.div`\r\n  width: 25%;\r\n  max-height: 100%;\r\n  overflow: scroll;\r\n`;\r\n\r\nexport const PageTitle = styled.p`\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 24px;\r\n  line-height: 44px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const TextField = styled.input`\r\n  width:  100%;\r\n  height: 35px;\r\n  border: 1px solid rgba(48, 48, 48, 0.25);\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  font-family: Montserrat;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TextField = styled.input`\r\n  width:  100%;\r\n  height: 35px;\r\n  border: 1px solid rgba(48, 48, 48, 0.25);\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;","import styled from 'styled-components';\r\n\r\nconst Card = styled.div(({width = '100%', height = 'auto', minHeight = height, margin = '0px',padding = '0px', lg = width, md = lg, sm = md, xs = sm, cursor, hover, selfCenter, direction = 'row'}) => `\r\n  display: flex;\r\n  flex-direction: ${direction};\r\n  flex-wrap: wrap;\r\n  width: ${width};\r\n  height: ${height};\r\n  min-height: ${minHeight};\r\n  margin: ${margin};\r\n  padding: ${padding};\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 5px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: white;\r\n  ${selfCenter && 'margin: 10px auto;'}\r\n  @media only screen and (max-width: 1200px){\r\n    width: ${lg}\r\n  }\r\n\r\n  @media only screen and (max-width: 992px){\r\n    width: ${md}\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    width: ${sm}\r\n  }\r\n\r\n  @media only screen and (max-width: 576px){\r\n    width: ${xs}\r\n  }\r\n\r\n  &:hover {\r\n    cursor: ${cursor};\r\n    ${hover && 'box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);'}\r\n  }\r\n`\r\n);\r\n\r\nexport default Card;","import styled from 'styled-components';\r\n\r\nexport const CardListContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from \"../../Commons/Card/Card\";\r\nimport { CardListContainer } from './styles';\r\n\r\n\r\nconst RouteCard = (props) => {\r\n  const [routes, setRoutes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.Routes.routes) {\r\n      if (Object.entries(props.Routes.routes).length !== 0) {\r\n        setRoutes(props.Routes.routes);\r\n      }\r\n      else {\r\n        setRoutes([]);\r\n      }\r\n    }\r\n  }, [props.Routes]);\r\n\r\n  const handleRouteClick = async (item) => {\r\n    props.callBack(item.RouteId);\r\n  };\r\n\r\n  return (\r\n    <CardListContainer>\r\n      {\r\n        routes.map((route, i) =>\r\n          <Card width=\"90%\" height=\"20%\" margin=\"10px\" cursor=\"pointer\" hover selfCenter key={route.RouteId}\r\n            onClick={() => handleRouteClick(route)}>\r\n            {route.Name1}\r\n          </Card>\r\n        )\r\n      }\r\n    </CardListContainer>\r\n  )\r\n}\r\n\r\nexport default RouteCard;","import React from \"react\";\r\nimport { Title, Container,TextField } from \"./styles\";\r\nimport RouteCard from \"../RouteCard\";\r\n\r\nconst ListCard = (props) => {\r\n  function getRouteID(routeID) {\r\n    props.passRouteId(routeID);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {/* Displays Routes */}\r\n      <Title>{props.title}</Title>\r\n      <TextField as=\"select\"\r\n        value={props.currentToken}\r\n        onChange={(e) => props.setCurrentToken(e.currentTarget.value)}\r\n      >\r\n        {Object.entries(props.tokens).map((token, idx) => (\r\n          <option key={idx} value={token[1]}>\r\n            {token[0]}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n        <RouteCard Routes={props.routes} callBack={getRouteID} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","const axios = require(\"axios\");\r\nconst URL = \"https://gtfs-mdc.herokuapp.com\";\r\n\r\nconst API = {\r\n  getRoutes: async function (token) {\r\n    let response = await axios.get(`${URL}/routes/find/all?token=${token}`);\r\n    return response.data;\r\n  },\r\n  getTokens: async () => {\r\n    let response = await axios.get(`${URL}/tokens`);\r\n    return response.data;\r\n  },\r\n  getShapeByRoute: async function (token, routeId) {\r\n    let response = await axios.get(\r\n      `${URL}/shapes/find?token=${token}&id=${routeId}`\r\n    );\r\n    return response.data;\r\n  },\r\n  getStopsByRoute: async function (routeId) {\r\n    let response = await axios.get(`${URL}/stops/find?id=${routeId}`);\r\n    return response.data;\r\n  },\r\n  registerUser: async function (username, password, email) {\r\n    try {\r\n      let response = await axios.post(`${URL}/register`, {\r\n        user: username,\r\n        pwd: password,\r\n        email,\r\n      });\r\n      return response.data;\r\n    } catch (e) {\r\n      const { status } = e.response;\r\n      if (status === 406) {\r\n        return { message: \"Account already in use\" };\r\n      }\r\n      if (status === 500) {\r\n        return { message: \"There was an Error creating your account\" };\r\n      }\r\n      return { message: \"There was an Error creating your account\" };\r\n    }\r\n  },\r\n  getStations: async function () {\r\n    try {\r\n      let response = await axios.get(`${URL}/stations`);\r\n      return response.data;\r\n    } catch (e) {\r\n      return { message: \"There was an error getting the stations\" };\r\n    }\r\n  },\r\n  getTrainSchedule: async function (arrival, departure, date) {\r\n    try {\r\n      let response = await axios.get(`${URL}/trains/find?arrival=${arrival}&departure=${departure}&departure%20date=${date}`);\r\n      return response.data;\r\n    } catch (e) {\r\n      return { message: \"There was an error getting your schedule\" };\r\n    }\r\n  },\r\n  getAllTrirail: async function () {\r\n    try {\r\n      let response = await axios.get(`${URL}/trirail/find/all`);\r\n      return response.data;\r\n    } catch (e) {\r\n      return {message: \"There was an error getting the trirails\" };\r\n    }\r\n  },\r\n  getTrirailShape: async function (id) {\r\n    try {\r\n      let response =  await axios.get(`${URL}/trishape/find?id=${id}`);\r\n      return response.data;\r\n    } catch (e) {\r\n      return { message: \"There was an error getting the trirails shape\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport default API;\r\n","import styled from 'styled-components';\r\n\r\nexport const LocationButton = styled.div`\r\n  background: #FFFFFF;\r\n  border-radius: 4px;\r\n  width: 25px;\r\n  height: 25px;\r\n  box-shadow: 0 1px 5px rgba(0,0,0,0.35);\r\n  z-index: 2;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledLocationIcon = styled.svg`\r\n  width: 100%;\r\n  height: 100%;\r\n`;","import React from 'react';\r\nimport { TiLocationArrow } from 'react-icons/ti';\r\nimport { LocationButton, StyledLocationIcon } from './styles';\r\n\r\nconst Location = (props) => {\r\n  const handleGeoLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      console.log(\"No Geolocation\")\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(handleGeoLocationSuccess, handleGeoLocationError);\r\n    }\r\n  }\r\n\r\n  const handleGeoLocationSuccess = (positions) => {\r\n    const {latitude, longitude, accuracy} = positions.coords;\r\n    props.setCurrentLocation({position: [latitude, longitude], accuracy: accuracy});\r\n  }\r\n\r\n  const handleGeoLocationError = (err) => {\r\n    console.log(err)\r\n  }\r\n\r\n  return (\r\n    <LocationButton onClick={handleGeoLocation}><StyledLocationIcon as={TiLocationArrow}/></LocationButton>\r\n  )\r\n};\r\n\r\nexport default Location;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Map as LeafletMap,\r\n  TileLayer,\r\n  CircleMarker,\r\n  Popup,\r\n  Polyline,\r\n  Marker,\r\n  Circle,\r\n} from \"react-leaflet\";\r\n\r\nimport Location from \"../../Location/Location\";\r\n\r\nconst MapComponent = (props) => {\r\n  const [shape, setShape] = useState({});\r\n  const [trirailShape, setTrirailShape] = useState([]);\r\n  const [currentLocation, setCurrentLocation] = useState(undefined);\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (props.shape?.RoutePath?.length) {\r\n      setShape(props.shape);\r\n      mapRef.current.leafletElement.fitBounds(props.shape?.RoutePath);\r\n    }\r\n\r\n    if(Array.isArray(props.shape)){\r\n      setTrirailShape(props.shape);\r\n      mapRef.current.leafletElement.fitBounds(props.shape);\r\n    }\r\n  }, [props.shape]);\r\n\r\n  useEffect(() => {\r\n    if(currentLocation?.position){\r\n      mapRef.current.leafletElement.panTo(currentLocation.position);\r\n    }\r\n  }, [currentLocation]);\r\n\r\n  return (\r\n    <LeafletMap center={[25.7617, -80.1918]} zoom={13} ref={mapRef}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Location setCurrentLocation={setCurrentLocation} />\r\n      {currentLocation?.position && (\r\n        <>\r\n          <Marker position={currentLocation.position} />\r\n          <Circle\r\n            center={currentLocation.position}\r\n            radius={currentLocation.accuracy}\r\n          />\r\n        </>\r\n      )}\r\n      <Polyline positions={shape?.RoutePath || []} color={shape?.LineColor}>\r\n        <Popup>{shape.RoutePath && <div>{shape.Names}</div>}</Popup>\r\n      </Polyline>\r\n      {shape?.stops?.map((mark) => (\r\n        <CircleMarker radius={3} center={mark}></CircleMarker>\r\n      ))}\r\n\r\n      {trirailShape && <Polyline positions={trirailShape} />}\r\n    </LeafletMap>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n","\r\n  export const transMethods = ['Trains', 'Trirail', 'Bus'];","import styled from 'styled-components';\r\n\r\nexport const TextField = styled.input`\r\n  width:  100%;\r\n  height: 35px;\r\n  border: 1px solid rgba(48, 48, 48, 0.25);\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Form = styled.form` \r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 5%;\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  display: flex;\r\n  ${({wrap}) => wrap ? 'flex-wrap: wrap' : null};\r\n  width: 100%;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  max-height: 400px;\r\n`;\r\n\r\nexport const TextLabel = styled.label`\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  color: #797979;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const InputButton = styled.input`\r\n  background: #E892A2;\r\n  border-radius: 5px;\r\n  width: 125px;\r\n  color: #FFFFFF;\r\n  height: 35px;\r\n  border-width: 0;\r\n  align-self: center;\r\n\r\n`;\r\n\r\nexport const PageTitle = styled.p`\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 36px;\r\n  line-height: 44px;\r\n  align-self: start;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n font-family: Montserrat;\r\n font-style: normal;\r\n font-weight: normal;\r\n font-size: 18px;\r\n line-height: 22px;\r\n text-align: center;\r\n white-space: pre-line;\r\n width: 300px;\r\n\r\n `;","import React, { useState, useEffect } from \"react\";\r\nimport { FormContainer, Form, TextField, TextLabel, InputButton, Text } from \"./styles\";\r\nimport Card from \"../../Commons/Card/Card\";\r\nimport API from \"../../../Services/API\";\r\nimport {IoMdTrain} from 'react-icons/io';\r\nimport moment from 'moment';\r\n\r\nconst TrainsPanel = () => {\r\n  const [stations, setStations] = useState({});\r\n  const today = moment().format('YYYY-MM-DDTkk:mm');\r\n  const [departureTime, setDepartureTime] = useState(today);\r\n  const [arrival, setArrival] = useState(undefined);\r\n  const [departure, setDeparture] = useState(undefined);\r\n  const [trainSchedule, setTrainSchedule] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getStations() {\r\n      let response = await API.getStations();\r\n      setStations(response);\r\n    }\r\n\r\n    getStations();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    let arrivalStation = arrival ? arrival : '';\r\n    let departureStation = departure ? departure : '';\r\n    let departureTimeFormat = moment(departureTime).subtract(1, 'years').format('YYYY-MM-DD');\r\n    let response = await API.getTrainSchedule(arrivalStation, departureStation, departureTimeFormat);\r\n    if(Array.isArray(response)){\r\n      setTrainSchedule(response);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <FormContainer>\r\n      <Card>\r\n        <Form onSubmit={handleSearch}>\r\n          <TextLabel>Departure Date</TextLabel>\r\n          <TextField type=\"datetime-local\" value={departureTime} onChange={e => setDepartureTime(e.currentTarget.value)}></TextField>\r\n          <TextLabel>Departure</TextLabel>\r\n          <TextField as=\"select\" value={departure} onChange={e => setDeparture(e.currentTarget.value)}>\r\n          <option value={undefined}></option>\r\n            {Object.entries(stations).map((station, idx) => (\r\n              <option key={idx} value={station[1]}>\r\n                {station[0]}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <TextLabel>Arrival</TextLabel>\r\n          <TextField as=\"select\" value={arrival} onChange={e => setArrival(e.currentTarget.value)}>\r\n            <option value={undefined}></option>\r\n            {Object.entries(stations).map((station, idx) => (\r\n              <option key={idx} value={station[1]}>\r\n                {station[0]}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <InputButton type=\"submit\" value=\"Search\"></InputButton>\r\n        </Form>\r\n      </Card>\r\n    </FormContainer>\r\n\r\n    <FormContainer wrap>\r\n      {trainSchedule.map((train, idx) => (\r\n        <Card key={idx} width=\"90%\" height=\"20%\" margin=\"10px\" cursor=\"pointer\" hover selfCenter> \r\n          <Text>{train.origin} <IoMdTrain /> {train.destination}</Text>\r\n          <Text>Train: {train.train}</Text>\r\n          <Text>Departure: {moment(train.scheduledDeparture).format('MM/DD/YY kk:mma')}</Text>\r\n        </Card>\r\n      ))}\r\n    </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainsPanel;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  font-family: Montserrat;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CardListContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { Container, CardListContainer, Title } from \"./styles\";\r\nimport API from \"../../../Services/API\";\r\nimport Card from \"../../Commons/Card/Card\";\r\n\r\nconst TrirailPanel = (props) => {\r\n  const [trirails, setTrirails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getTrirails() {\r\n      let response = await API.getAllTrirail();\r\n      setTrirails(response);\r\n    }\r\n    getTrirails();\r\n  }, []);\r\n\r\n  const handleTrirailClick = async (id) => {\r\n    let shape = await API.getTrirailShape(id);\r\n    props.setShape(shape);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Title>Trirails</Title>\r\n      <CardListContainer>\r\n        {trirails.map((trirail, idx) => (\r\n          <Card\r\n            width=\"90%\"\r\n            height=\"20%\"\r\n            margin=\"10px\"\r\n            cursor=\"pointer\"\r\n            hover\r\n            selfCenter\r\n            key={trirail.id}\r\n            onClick={() => handleTrirailClick(trirail.id)}\r\n          >\r\n            {trirail.name}\r\n          </Card>\r\n        ))}\r\n      </CardListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TrirailPanel;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  ListContainer,\r\n  MainContainer,\r\n  MapContainer,\r\n  PageTitle,\r\n  TextField,\r\n} from \"./styles\";\r\nimport ListCard from \"./ListCard\";\r\nimport API from \"../../Services/API\";\r\nimport MapComponent from \"./Map\";\r\nimport { transMethods } from \"../../Static/values\";\r\nimport TrainsPanel from \"./TrainsPanel/TrainsPanel\";\r\nimport TrirailPanel from './TrirailPanel/TrirailPanel';\r\n\r\nconst MainPage = () => {\r\n  const [routeId, setRouteId] = useState(\"\");\r\n  const [routes, setRoutes] = useState([]);\r\n  const [shape, setShape] = useState({});\r\n  const [tokens, setTokens] = useState({});\r\n  const [currentToken, setCurrentToken] = useState(\"\");\r\n  const [points, setPoints] = useState([]);\r\n  const [currentTransMethod, setCurrentTransMethod] = useState(undefined);\r\n\r\n  const getDataPerRoute = useCallback(\r\n    async (routeId) => {\r\n      if (routeId) {\r\n        let shape = await API.getShapeByRoute(currentToken, routeId);\r\n        let stops = await API.getStopsByRoute(routeId);\r\n        setShape({ ...shape, stops });\r\n      }\r\n    },\r\n    [currentToken]\r\n  );\r\n\r\n  const getBusData = useCallback(async () => {\r\n    let apiTokens = await API.getTokens();\r\n    setTokens(apiTokens);\r\n    setCurrentToken(Object.values(apiTokens)[0]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(currentTransMethod === transMethods[2]){\r\n      getBusData();\r\n    }\r\n  }, [currentTransMethod, getBusData])\r\n  /*\r\n  Fetches routes onLoad &\r\n  Fetch routes per token passed\r\n  Rerender component when CurrentToken Changes\r\n   */\r\n  useEffect(() => {\r\n    async function fetchRoutes() {\r\n      let apiRoutes = await API.getRoutes(currentToken);\r\n      setRoutes(apiRoutes);\r\n      setPoints(apiRoutes.points);\r\n    }\r\n\r\n    fetchRoutes();\r\n  }, [currentToken]);\r\n\r\n  useEffect(() => {\r\n    getDataPerRoute(routeId);\r\n  }, [routeId, getDataPerRoute]);\r\n\r\n  return (\r\n    // Map LeftSide\r\n    <MainContainer>\r\n      <MapContainer>\r\n        <MapComponent shape={shape} currentTransMethod={currentTransMethod} />\r\n      </MapContainer>\r\n\r\n      {/*//Routes List RightSide*/}\r\n      <ListContainer>\r\n        <PageTitle>Select Method of Transportation:</PageTitle>\r\n        <TextField as=\"select\"\r\n          value={currentTransMethod}\r\n          onChange={(e) => setCurrentTransMethod(e.currentTarget.value)}>\r\n        \r\n          <option></option>\r\n          {transMethods.map((method, idx) => (\r\n            <option value={method} key={idx}>\r\n              {method}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n        {currentTransMethod === transMethods[0] && <TrainsPanel />}\r\n        {currentTransMethod === transMethods[1] && <TrirailPanel setShape={setShape}/>}\r\n        {currentTransMethod === transMethods[2] && (\r\n          <ListCard\r\n            title={\"Routes\"}\r\n            routes={routes}\r\n            passRouteId={setRouteId}\r\n            setCurrentToken={setCurrentToken}\r\n            tokens={tokens}\r\n          />\r\n        )}\r\n\r\n        {/* <RouteCard title={\"Trips\"}/> */}\r\n      </ListContainer>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './Components/MainPage/MainPage';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <MainPage/>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import styled from 'styled-components';\r\n\r\nexport const TextField = styled.input`\r\n  width:  100%;\r\n  height: 35px;\r\n  border: 1px solid rgba(48, 48, 48, 0.25);\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Form = styled.form` \r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 5%;\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const TextLabel = styled.label`\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  color: #797979;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const InputButton = styled.input`\r\n  background: #E892A2;\r\n  border-radius: 5px;\r\n  width: 125px;\r\n  color: #FFFFFF;\r\n  height: 35px;\r\n  border-width: 0;\r\n  align-self: center;\r\n\r\n`;\r\n\r\nexport const PageTitle = styled.p`\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 36px;\r\n  line-height: 44px;\r\n  align-self: start;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalBackground = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.75);\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  display: ${({show}) => show ? 'flex' : 'none'};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CardTitle = styled.h1`\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 16px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const CardDescription = styled.pre`\r\n    font-size: medium;\r\n    white-space: pre-line;\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const ModalText = styled.p`\r\n font-family: Montserrat;\r\n font-style: normal;\r\n font-weight: normal;\r\n font-size: 18px;\r\n line-height: 22px;\r\n text-align: center;\r\n white-space: pre-line;\r\n width: 300px;\r\n\r\n `;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport {CardDescription, CardTitle, ModalBackground, ModalText} from \"./styles\";\r\nimport {Form, InputButton} from \"../../SignupPage/styles\";\r\n\r\nconst Modal = props => {\r\n\r\n  const onClose = e => {\r\n    return props.onClose?.(e)\r\n  };\r\n\r\n  return (\r\n    <ModalBackground show={props.show}>\r\n      <Card position=\"relative\" width=\"558px\" height=\"325px\" direction='column'>\r\n        {/*Todo align to top left*/}\r\n        <CardTitle>{props.title}</CardTitle>\r\n        <ModalText className=\"content\">{props.message}</ModalText>\r\n        <div className=\"actions\">\r\n          <InputButton\r\n              className=\"signup-button\"\r\n              type=\"submit\"\r\n              value=\"Close\"\r\n              onClick={onClose}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </ModalBackground>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport API from \"../../Services/API.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TextField, Form, FormContainer, TextLabel, InputButton, PageTitle} from \"./styles\";\r\nimport Card from \"../Commons/Card/Card.js\";\r\nimport Modal from \"../Commons/Modal/Modal\";\r\n\r\nexport default function SignUp() {\r\n  let history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setmodalText] = useState(\"\");\r\n  const [modalTitle, setmodalTitle] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    errors,\r\n    setError,\r\n    clearError,\r\n    formState: { isSubmitting }\r\n  } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    validate(data);\r\n  };\r\n\r\n  function showModal(){\r\n    setShow(prev => !prev);\r\n  }\r\n\r\n  function ErrorMessage({ error }) {\r\n    if (error) {\r\n      switch (error.type) {\r\n        case \"required\":\r\n          return <p>This is required</p>;\r\n        case \"minLength\":\r\n          return <p>The minimum length is 6 characters</p>;\r\n        case \"pattern\":\r\n          return <p>Enter a valid email address</p>;\r\n        case \"maxlength\":\r\n          return <p>The minimum length is 100 characters</p>;\r\n        case \"validate\":\r\n          return <p>Username is already used</p>;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  const validate = async ({ user, pwd, email }) => {\r\n    let response = await API.registerUser(user, pwd, email);\r\n\r\n    //Username was taken\r\n    if (response.message) {\r\n      setError(\"usernameTaken\", \"validate\");\r\n      setmodalText(`There was an error signing up with the given information \\n \\n ${response.message} \\n \\n`);\r\n      setmodalTitle(\"Sign up Error\")\r\n      showModal();\r\n    } else {\r\n    /**\r\n     * Username was not taken,\r\n     * Gets registered in backend\r\n     * Redirects to Home page('/')\r\n     */\r\n      clearError(\"user\");\r\n      setmodalText(\"Succesfuly created an account! Will Redirect in 5 seconds.\")\r\n      showModal();\r\n      setTimeout(function() { history.push(\"/\");; }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Modal onClose={showModal} title={modalTitle} show={show} message={modalText}/>\r\n      <Card width=\"50%\" xs=\"95%\">\r\n        <Form className=\"signup-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <PageTitle>Sign up</PageTitle>\r\n          <TextLabel className=\"signup-label\">Email</TextLabel>\r\n          <TextField\r\n            className=\"signup-input\"\r\n            name=\"email\"\r\n            ref={register({\r\n              required: true,\r\n              pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n            })}\r\n          />\r\n          <ErrorMessage error={errors.email} />\r\n\r\n          <TextLabel className=\"signup-label\">User Name</TextLabel>\r\n          <TextField\r\n            className=\"signup-input\"\r\n            name=\"user\"\r\n            ref={register({ required: true, minLength: 6, maxlength: 100 })}\r\n          />\r\n          <ErrorMessage error={errors.user} />\r\n\r\n          <TextLabel className=\"signup-label\">Password</TextLabel>\r\n          <TextField\r\n            type=\"password\"\r\n            className=\"signup-input\"\r\n            name=\"pwd\"\r\n            ref={register({ required: true, minLength: 8, maxlength: 100 })}\r\n          />\r\n          <ErrorMessage error={errors.pwd} />\r\n\r\n          <InputButton\r\n            disabled={isSubmitting}\r\n            className=\"signup-button\"\r\n            type=\"submit\"\r\n            value=\"Create Account\"\r\n          />\r\n        </Form>\r\n      </Card>\r\n    </FormContainer>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Burgermenu = (props) => {\r\n  return (\r\n    <Wrapper onClick={props.handleNavbar}>\r\n      <div className={ props.navbarState ? \"open\" : \"\" }>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Burgermenu;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  padding-top: .7rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  & span {\r\n    background: #fdcb6e;\r\n    display: flex;\r\n    position: relative;\r\n    width: 3.5rem;\r\n    height: .4rem;\r\n    margin-bottom: .7rem;\r\n    transition: all ease-in-out 0.2s;\r\n  }\r\n\r\n  .open span:nth-child(2) {\r\n      opacity: 0;\r\n    }\r\n\r\n  .open span:nth-child(3) {\r\n    transform: rotate(45deg);\r\n    top: -11px;\r\n  }\r\n\r\n  .open span:nth-child(1) {\r\n    transform: rotate(-45deg);\r\n    top: 11px;\r\n  }\r\n\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst CollapseMenu = (props) => {\r\n  const { open } = useSpring({ open: props.navbarState ? 0 : 1 });\r\n\r\n  if (props.navbarState === true) {\r\n    return (\r\n      <CollapseWrapper style={{\r\n        transform: open.interpolate({\r\n          range: [0, 0.2, 0.3, 1],\r\n          output: [0, -20, 0, -200],\r\n        }).interpolate(openValue => `translate3d(0, ${openValue}px, 0`),\r\n      }}\r\n      >\r\n        <NavLinks>\r\n          <li><Link to=\"/\" onClick={props.handleNavbar}>Map</Link></li>\r\n          <li><Link to=\"/profile\" onClick={props.handleNavbar}>Account</Link></li>\r\n          <li><Link to=\"/signup\" onClick={props.handleNavbar}>Sign Up</Link></li>\r\n        </NavLinks>\r\n      </CollapseWrapper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default CollapseMenu;\r\n\r\nconst CollapseWrapper = styled(animated.div)`\r\n  z-index: 1;\r\n  background: #2d3436;\r\n  position: fixed;\r\n  top: 4.5rem;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  list-style-type: none;\r\n  padding: 2rem 1rem 2rem 2rem;\r\n\r\n  & li {\r\n    transition: all 300ms linear 0s;\r\n  }\r\n\r\n  & a {\r\n    font-size: 1.4rem;\r\n    line-height: 2;\r\n    color: #dfe6e9;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #fdcb6e;\r\n      border-bottom: 1px solid #fdcb6e;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nimport Menu from \"./Menu\";\r\nimport CollapseMenu from \"./CollapseMenu\";\r\n\r\nconst Navbar = (props) => {\r\n  const barAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, -10rem, 0)' },\r\n    transform: 'translate3d(0, 0, 0)',\r\n  });\r\n\r\n  const linkAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, 30px, 0)', opacity: 0 },\r\n    to: { transform: 'translate3d(0, 0, 0)', opacity: 1 },\r\n    delay: 800,\r\n    config: config.wobbly,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NavBar style={barAnimation}>\r\n        <FlexContainer>\r\n         \r\n          <NavLinks style={linkAnimation}>\r\n            <Link to=\"/\">Map</Link>\r\n            <Link to=\"/profile\">Account</Link>\r\n            <Link to=\"/signup\">Sign Up</Link>\r\n       \r\n          </NavLinks>\r\n          <BurgerWrapper>\r\n            <Menu\r\n              navbarState={props.navbarState} \r\n              handleNavbar={props.handleNavbar}\r\n            />\r\n          </BurgerWrapper>\r\n        </FlexContainer>\r\n      </NavBar>\r\n      <CollapseMenu \r\n        navbarState={props.navbarState} \r\n        handleNavbar={props.handleNavbar}\r\n      />\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\nconst NavBar = styled(animated.nav)`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: #2d3436;\r\n  z-index: 1;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n \r\n  display: flex;\r\n  margin-right: auto;\r\n  padding: 0 2rem;;\r\n  justify-content: space-between;\r\n  height: 5rem;\r\n`;\r\n\r\nconst NavLinks = styled(animated.ul)`\r\n  justify-self: end;\r\n  list-style-type: none;\r\n  margin: auto 0; \r\n  z-index: 0;\r\n\r\n  & a {\r\n    color: #dfe6e9;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid transparent;\r\n    margin: 0 1.5rem;\r\n    transition: all 300ms linear 0s;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n\r\n    &:hover {\r\n      color: #fdcb6e;\r\n      border-bottom: 1px solid #fdcb6e;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n  \r\n    }\r\n  }\r\n`;\r\nconst BurgerWrapper = styled.div`\r\n  margin-right: auto 0;\r\n  align-content: right;\r\n\r\n  @media (min-width: 769px) {\r\n    display: flex;\r\n  }\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:400,600&display=swap');;\r\n\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0px;\r\n    padding: 0px;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n    background-color: #F2F2F2;\r\n  }\r\n\r\n  body {\r\n    box-sizing: border-box;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 12px;\r\n}\r\n \r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: none; \r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n}\r\n \r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n    background: rgba(0,0,0,0.4); \r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.25); \r\n}\r\n::-webkit-scrollbar-thumb:window-inactive {\r\n\tbackground: rgba(0,0,0,0.2); \r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageContainer = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\n`;\r\n\r\n\r\nexport const ProfileContainer = styled.div`\r\n\r\n justify-content: center;\r\n align-items: center;\r\n font-size: 16px;\r\ndisplay: flex;\r\nwidth: 60%;\r\nmargin-top: 5%;\r\n`;\r\n\r\nexport const SideContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nfont-size: 16px;\r\njustify-content: center;\r\nwidth: 30%;\r\nmargin-top: 5%;\r\n`;\r\n\r\nexport const ProfileImage = styled.img`\r\n\r\n border-radius: 60%;\r\njustify-content: center;\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 128px;\r\nwidth: 128px;\r\nborder: 4px solid #EAEAEA;\r\nbox-sizing: border-box;\r\n`;\r\n\r\nexport const StyledHr = styled.hr`\r\nwidth: 500px;\r\n`;\r\n\r\nexport const Row = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nwidth: 100%;\r\njustify-content: space-between;\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${({width}) => width ? width : '100%'};\r\n`;\r\n\r\nexport const About = styled.textarea`\r\nheight: 200px;\r\nwidth:  100%;\r\nborder: 1px solid rgba(48, 48, 48, 0.25);\r\nborder-radius: 5px;\r\nmargin-bottom: 20px;\r\nresize: none;\r\n`;\r\n\r\nexport const ProfileDescription = styled.p`\r\npadding-top: 20px;\r\nfont-size: 14px;\r\n\r\n`;\r\n\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { ProfileContainer, ProfileImage, StyledHr, SideContainer, FormBox, Row, Column, About, PageContainer, ProfileDescription } from \"./styles\";\r\nimport Card from '../Commons/Card/Card'\r\nimport { TextLabel, InputButton, Form, TextField } from \"../SignupPage/styles\";\r\n\r\n\r\n\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState({\r\n    name: \"John Doe\",\r\n    email: \"johndoe@gmail.com\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/commons/4/4e/Macaca_nigra_self-portrait_large.jpg\"\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting }\r\n  } = useForm();\r\n\r\n  return (\r\n    <div class=\"row\">\r\n      <PageContainer>\r\n        <ProfileContainer>\r\n          <Card height=\"110%\" direction=\"column\" padding=\"10%\" width=\"80%\">\r\n            <form>\r\n              <Row>\r\n                <Column width=\"45%\">\r\n                  <TextLabel>Username</TextLabel>\r\n                  <TextField placeholder=\" Username\" name=\"Username\" />\r\n                </Column>\r\n                <Column width=\"45%\">\r\n                  <TextLabel>Email</TextLabel>\r\n                  <TextField type=\"text\" placeholder=\" Email\" name=\"Email\" />\r\n                </Column>\r\n              </Row>\r\n              <TextLabel>Address</TextLabel>\r\n              <TextField type=\"text\" placeholder=\" Address\" name=\"Address\" />\r\n              <TextLabel>About</TextLabel>\r\n              <About type=\"text\" name=\" About\" maxlength=\"500\" />\r\n            </form>\r\n\r\n            <InputButton\r\n              disabled={isSubmitting}\r\n              className=\"update-button\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n            />\r\n\r\n          </Card></ProfileContainer>\r\n\r\n\r\n        <SideContainer>\r\n          <Card direction=\"column\" padding=\"10%\" width=\"80%\">\r\n\r\n            <ProfileImage src={user.avatar} />\r\n\r\n            <p>{user.name}</p>\r\n            <p>{user.email}</p>\r\n            <ProfileDescription>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</ProfileDescription></Card></SideContainer>\r\n      </PageContainer>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default UserProfile;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Link, HashRouter as Router, Switch } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport SignUp from './Components/SignupPage/SignUp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Navbar from \"./Components/navbar/Navbar\";\r\nimport GlobalStyle from './Components/Styles/Global';\r\nimport UserProfile from './Components/UserProfile/UserProfile';\r\n\r\nconst Routing = () => {\r\n  const [navbarOpen, setNavbarOpen] = useState(false);\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Navbar\r\n        navbarState={navbarOpen}\r\n        handleNavbar={() => setNavbarOpen(prevState => !prevState)}\r\n      />\r\n      \r\n      <GlobalStyle />\r\n      <div style={{ height: \"100vh\", paddingTop: \"50px\" }}>\r\n        <Switch>\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/profile\" component={UserProfile} />\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nReactDOM.render(<Routing />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}